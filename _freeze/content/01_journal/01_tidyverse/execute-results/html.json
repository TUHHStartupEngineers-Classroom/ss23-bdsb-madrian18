{
  "hash": "288896f75075c3e63795e824d3f13d83",
  "result": {
    "markdown": "---\ntitle: \"Tidyverse\"\nauthor: \"Muhammad Adrian\"\n---\n\n\n::: callout-note\nYou can delete everything in here and start fresh.\n:::\n\nThis is a `.qmd` file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a \\# in front of your text, it will create a top level-header.\n\nTo learn more about Quarto websites visit <https://quarto.org/docs/websites>.\n\n# Text Formatting\n\n*italics* and **bold**\n\nsuperscript^2^ / subscript~2~\n\n~~strikethrough~~\n\n`verbatim code`\n\n> Blockquote\n\n# Headings\n\n## Header 2\n### Header 3\n#### Header 4\n##### Header 5\n###### Header 6\n\n# Links & Images\n\n<https://quarto.org>\n\n[Quarto](https://quarto.org)\n\n![Caption](../../assets/img/elephant.png)\n\n[![Caption](../../assets/img/elephant.png)](https://quarto.org)\n\n[![Caption](../../assets/img/elephant.png)](https://quarto.org \"An elephant\")\n\n\n# Lists\n\n* unordered list\n    + sub-item 1\n    + sub-item 2\n        - sub-sub-item 1\n        \n*   item 2\n\n    Continued (indent 4 spaces)\n    \n    \n1. ordered list\n2. item 2\n    i) sub-item 1\n         A.  sub-sub-item 1\n         \n(@)  A list whose numbering\n\ncontinues after\n\n(@)  an interruption\n\n# Tables\n\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|   12  |  12  |    12   |    12  |\n|  123  |  123 |   123   |   123  |\n|    1  |    1 |     1   |     1  |\n\n# Source Code\n\nUse ``` to delimit blocks of source code:\n\n```\n# Data Science at TUHH ------------------------------------------------------\n# SALES ANALYSIS ----\n\n# 1.0 Load libraries ----\n\nlibrary(tidyverse)\n\n# Excel Files\nlibrary(readxl)\n\n# 2.0 Importing Files ----\n\nbikes_tbl      <- read_excel(path = \"00_data/01_raw_data/bikes.xlsx\")\norderlines_tbl <- read_excel(\"00_data/01_raw_data/orderlines.xlsx\")\n\n# Not necessary for this analysi\nbikeshops_tbl  <- read_excel(\"00_data/01_raw_data/bikeshops.xlsx\")\n\n# 3.0 Examining Data ----\n\n# Method 1: Print it to the console\norderlines_tbl\n\n# Method 2: Clicking on the file in the environment tab (or run View(orderlines_tbl)) There you can play around with the filter.\n\n# Method 3: glimpse() function. Especially helpful for wide data (data with many columns)\nglimpse(orderlines_tbl)\n\n# 4.0 Joining Data ----\n\n# If the data has no common column name, you can provide each column name in the \"by\" argument. For example, by = c(\"a\" = \"b\") will match x.a to y.b. The order of the columns has to match the order of the tibbles).\nleft_join(orderlines_tbl, bikes_tbl, by = c(\"product.id\" = \"bike.id\"))\n\n# Chaining commands with the pipe and assigning it to order_items_joined_tbl\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\n# Examine the results with glimpse()\nbike_orderlines_joined_tbl %>% glimpse()\n\n# 5.0 Wrangling Data ----\n# All actions are chained with the pipe already. You can perform each step separately and use glimpse() or View() to validate your code. Store the result in a variable at the end of the steps.\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%\n  # 5.1 Separate category name\n  separate(col    = category,\n           into   = c(\"category.1\", \"category.2\", \"category.3\"),\n           sep    = \" - \") %>%\n  \n  # 5.1.1 Separate location \n  separate(col    = location,\n           into   = c(\"city\", \"state\"),\n           sep    = \", \") %>%\n  \n  # 5.2 Add the total price (price * quantity) \n  # Add a column to a tibble that uses a formula-style calculation of other columns\n  mutate(total.price = price * quantity) %>%\n  \n  # 5.3 Optional: Reorganize. Using select to grab or remove unnecessary columns\n  # 5.3.1 by exact column name\n  select(-...1, -gender) %>%\n  \n  # 5.3.2 by a pattern\n  # You can use the select_helpers to define patterns. \n  # Type ?ends_with and click on Select helpers in the documentation\n  select(-ends_with(\".id\")) %>%\n  \n  # 5.3.3 Actually we need the column \"order.id\". Let's bind it back to the data\n  bind_cols(bike_orderlines_joined_tbl %>% select(order.id)) %>% \n  \n  # 5.3.4 You can reorder the data by selecting the columns in your desired order.\n  # You can use select_helpers like contains() or everything()\n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         city, state, price, quantity, total.price,\n         everything()) %>%\n  \n  # 5.4 Rename columns because we actually wanted underscores instead of the dots\n  # (one at the time vs. multiple at once)\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\n# 6.0 Business Insights ----\n# 6.1 Sales by Year ----\n\nlibrary(lubridate)\n\n# Step 1 - Manipulate\n\nsales_by_year_tbl <- bike_orderlines_wrangled_tbl %>%\n  \n  # Select columns\n  select(order_date, total_price) %>%\n  # Add year column\n  mutate(year = year(order_date)) %>%\n  # Grouping by year and summarizing sales\n  group_by(year) %>% \n  summarize(sales = sum(total_price)) %>%\n  \n  # Optional: Add a column that turns the numbers into a currency format \n  # (makes it in the plot optically more appealing)\n  # mutate(sales_text = scales::dollar(sales)) <- Works for dollar values\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_year_tbl  \n  \n# Step 2 - Visualize\nsales_by_year_tbl %>%\n  \n  # Setup canvas with the columns year (x-axis) and sales (y-axis)\n  ggplot(aes(x = year, y = sales)) +\n  \n  # Geometries\n  geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  geom_label(aes(label = sales_text)) + # Adding labels to the bars\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline\n\n  # Formatting\n  # scale_y_continuous(labels = scales::dollar) + # Change the y-axis. \n  # Again, we have to adjust it for euro values\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Revenue by year\",\n    subtitle = \"Upward Trend\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue\"\n  )\n  \n# 6.2 Sales by Year and Category ----\n\n# Step 1 - Manipulate\nsales_by_year_cat_1_tbl <- bike_orderlines_wrangled_tbl %>%\n\n  # Select columns and add a year\n  select(order_date, total_price, category_1) %>%\n  mutate(year = year(order_date)) %>%\n  \n  # Group by and summarize year and main category\n  group_by(year, category_1) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n  \n  # Format $ Text\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_year_cat_1_tbl  \n# Step 2 - Visualize\nsales_by_year_cat_1_tbl %>%\n  \n  # Set up x, y, fill\n  ggplot(aes(x = year, y = sales, fill = category_1)) +\n  \n  # Geometries\n  geom_col() + # Run up to here to get a stacked bar plot\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline\n  \n  # Facet\n  facet_wrap(~ category_1) +\n  \n  # Formatting\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by year and main category\",\n    subtitle = \"Each product category has an upward trend\",\n    fill = \"Main category\" # Changes the legend name\n  )\n\n# 6.3 Sales by Location ----\n\n# Step 1 - Manipulate\nsales_by_loc_tbl <- bike_orderlines_wrangled_tbl %>%\n  \n  # Select columns and add a year\n  select(order_date, total_price, state) %>%\n  mutate(year = year(order_date)) %>%\n  \n  # Group by and summarize year and main catgegory\n  group_by(state) %>%\n  summarise(sales = sum(total_price)) %>%\n  #ungroup() %>%\n  \n  # Format $ Text\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_loc_tbl\n\n# Step 2 - Visualize\nsales_by_loc_tbl %>%\n  \n  # Setup canvas with the columns year (x-axis) and sales (y-axis)\n  ggplot(aes(x = state, y = sales)) +\n  \n  # Geometries\n  geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  geom_label(aes(label = sales_text)) + # Adding labels to the bars\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline\n  \n  # Formatting\n  # scale_y_continuous(labels = scales::dollar) + # Change the y-axis. \n  # Again, we have to adjust it for euro values\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Revenue by year\",\n    subtitle = \"Upward Trend\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue\"\n  ) + \n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n\n\n# 6.4 Sales by Year and Location ----\n\n# Step 1 - Manipulate\nsales_by_year_loc_tbl <- bike_orderlines_wrangled_tbl %>%\n  \n  # Select columns and add a year\n  select(order_date, total_price, state) %>%\n  mutate(year = year(order_date)) %>%\n  \n  # Group by and summarize year and main category\n  group_by(year, state) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n  \n  # Format $ Text\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\nsales_by_year_loc_tbl  \n# Step 2 - Visualize\nsales_by_year_loc_tbl %>%\n  \n  # Set up x, y, fill\n  ggplot(aes(x = year, y = sales, fill = state)) +\n  \n  # Geometries\n  geom_col() + # Run up to here to get a stacked bar plot\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline\n  \n  # Facet\n  facet_wrap(~ state) +\n  \n  # Formatting\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by year and state\",\n    #subtitle = \"Each product category has an upward trend\",\n    fill = \"State\" # Changes the legend name\n  ) +\ntheme(\n  axis.text.x = element_text(angle = 45, hjust = 1)\n)\n\n\n# 7.0 Writing Files ----\n\n# 7.1 Excel ----\ninstall.packages(\"writexl\")\nlibrary(\"writexl\")\nbike_orderlines_wrangled_tbl %>%\n  write_xlsx(\"00_data/01_bike_sales/02_wrangled_data/bike_orderlines.xlsx\")\n\n# 7.2 CSV ----\nbike_orderlines_wrangled_tbl %>% \n  write_csv(\"00_data/01_bike_sales/02_wrangled_data/bike_orderlines.csv\")\n\n# 7.3 RDS ----\nbike_orderlines_wrangled_tbl %>% \n  write_rds(\"00_data/01_bike_sales/02_wrangled_data/bike_orderlines.rds\")\n\n```\n\nAdd a language to syntax highlight code blocks:\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_78745102f85d5cf89cad6fe4a83ca938'}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 2\n```\n:::\n:::\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-2_f6e8e1bca112a7054679dca3031b6157'}\n\n```{.r .cell-code}\ncars\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"speed\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"dist\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"4\",\"2\":\"2\"},{\"1\":\"4\",\"2\":\"10\"},{\"1\":\"7\",\"2\":\"4\"},{\"1\":\"7\",\"2\":\"22\"},{\"1\":\"8\",\"2\":\"16\"},{\"1\":\"9\",\"2\":\"10\"},{\"1\":\"10\",\"2\":\"18\"},{\"1\":\"10\",\"2\":\"26\"},{\"1\":\"10\",\"2\":\"34\"},{\"1\":\"11\",\"2\":\"17\"},{\"1\":\"11\",\"2\":\"28\"},{\"1\":\"12\",\"2\":\"14\"},{\"1\":\"12\",\"2\":\"20\"},{\"1\":\"12\",\"2\":\"24\"},{\"1\":\"12\",\"2\":\"28\"},{\"1\":\"13\",\"2\":\"26\"},{\"1\":\"13\",\"2\":\"34\"},{\"1\":\"13\",\"2\":\"34\"},{\"1\":\"13\",\"2\":\"46\"},{\"1\":\"14\",\"2\":\"26\"},{\"1\":\"14\",\"2\":\"36\"},{\"1\":\"14\",\"2\":\"60\"},{\"1\":\"14\",\"2\":\"80\"},{\"1\":\"15\",\"2\":\"20\"},{\"1\":\"15\",\"2\":\"26\"},{\"1\":\"15\",\"2\":\"54\"},{\"1\":\"16\",\"2\":\"32\"},{\"1\":\"16\",\"2\":\"40\"},{\"1\":\"17\",\"2\":\"32\"},{\"1\":\"17\",\"2\":\"40\"},{\"1\":\"17\",\"2\":\"50\"},{\"1\":\"18\",\"2\":\"42\"},{\"1\":\"18\",\"2\":\"56\"},{\"1\":\"18\",\"2\":\"76\"},{\"1\":\"18\",\"2\":\"84\"},{\"1\":\"19\",\"2\":\"36\"},{\"1\":\"19\",\"2\":\"46\"},{\"1\":\"19\",\"2\":\"68\"},{\"1\":\"20\",\"2\":\"32\"},{\"1\":\"20\",\"2\":\"48\"},{\"1\":\"20\",\"2\":\"52\"},{\"1\":\"20\",\"2\":\"56\"},{\"1\":\"20\",\"2\":\"64\"},{\"1\":\"22\",\"2\":\"66\"},{\"1\":\"23\",\"2\":\"54\"},{\"1\":\"24\",\"2\":\"70\"},{\"1\":\"24\",\"2\":\"92\"},{\"1\":\"24\",\"2\":\"93\"},{\"1\":\"24\",\"2\":\"120\"},{\"1\":\"25\",\"2\":\"85\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-3_c54f7526e0f7f04368360fa7b6e5663a'}\n\n```{.r .cell-code}\nplot(cars)\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}